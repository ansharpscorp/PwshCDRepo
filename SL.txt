WITH UPNParticipants AS (
    SELECT
        [Date],
        [Conference Id],
        [Second UPN] AS Participant,
        MAX([Audio Call Count]) AS AudioCallCountPerUser,
        MAX([Video Call Count]) AS VideoCallCountPerUser
    FROM YourTableName
    WHERE [Second UPN] IS NOT NULL AND [Second UPN] <> ''
    GROUP BY [Date], [Conference Id], [Second UPN]
),
PhoneParticipants AS (
    SELECT
        [Date],
        [Conference Id],
        [Second Phone Number] AS Participant,
        MAX([Audio Call Count]) AS AudioCallCountPerUser,
        MAX([Video Call Count]) AS VideoCallCountPerUser
    FROM YourTableName
    WHERE [Second Phone Number] IS NOT NULL AND [Second Phone Number] <> ''
    GROUP BY [Date], [Conference Id], [Second Phone Number]
),
AllParticipants AS (
    SELECT * FROM UPNParticipants
    UNION ALL
    SELECT * FROM PhoneParticipants
),
ConferenceSummary AS (
    SELECT
        [Date],
        [Conference Id],
        COUNT(DISTINCT Participant) AS UniqueParticipants,
        SUM(AudioCallCountPerUser) AS TotalAudioCalls,
        SUM(VideoCallCountPerUser) AS TotalVideoCalls
    FROM AllParticipants
    GROUP BY [Date], [Conference Id]
),
CategorizedConferences AS (
    SELECT
        [Date],
        CASE
            WHEN UniqueParticipants < 10 THEN '<10'
            WHEN UniqueParticipants BETWEEN 10 AND 25 THEN '>10 and <=25'
            WHEN UniqueParticipants BETWEEN 26 AND 100 THEN '>25 and <=100'
            ELSE '>100'
        END AS ParticipantGroup,
        TotalAudioCalls,
        TotalVideoCalls
    FROM ConferenceSummary
)
SELECT
    [Date],
    ParticipantGroup,
    COUNT(DISTINCT [Conference Id]) AS TotalUniqueConferences,
    SUM(TotalAudioCalls) AS TotalAudioCalls,
    SUM(TotalVideoCalls) AS TotalVideoCalls
FROM CategorizedConferences
GROUP BY [Date], ParticipantGroup
ORDER BY [Date], ParticipantGroup;
